-- Master Tables

DROP TABLE IF EXISTS REF_MEM_TYPE;
CREATE TABLE REF_MEM_TYPE
(
TYPE_ID Int NOT NULL AUTO_INCREMENT,
MEM_TYPE varchar(30),
PRIMARY KEY (TYPE_Id)
);

INSERT INTO REF_MEM_TYPE  (MEM_TYPE) VALUES ('SuperAdmin');
INSERT INTO REF_MEM_TYPE  (MEM_TYPE) VALUES ('Admin');
INSERT INTO REF_MEM_TYPE  (MEM_TYPE) VALUES ('Partner');
INSERT INTO REF_MEM_TYPE  (MEM_TYPE) VALUES ('User');

DROP TABLE IF EXISTS REF_GENDER;
CREATE TABLE REF_GENDER
(
GENDER_ID Int NOT NULL AUTO_INCREMENT,
GENDER varchar(10),
PRIMARY KEY (GENDER_ID)
);

INSERT INTO REF_GENDER  (GENDER) VALUES ('Male');
INSERT INTO REF_GENDER  (GENDER) VALUES ('Female');
INSERT INTO REF_GENDER  (GENDER) VALUES ('Unknown');

DROP TABLE IF EXISTS REF_KYC_STATUS;
CREATE TABLE REF_KYC_STATUS
(
KYC_STATUS_ID INT NOT NULL AUTO_INCREMENT,
KYC_STATUS VARCHAR(10),
PRIMARY KEY (KYC_STATUS_ID)
);

INSERT INTO REF_KYC_STATUS (KYC_STATUS) VALUES ('COMPLETE');
INSERT INTO REF_KYC_STATUS (KYC_STATUS) VALUES ('INCOMPLETE');
INSERT INTO REF_KYC_STATUS (KYC_STATUS) VALUES ('REJECTED');

DROP TABLE IF EXISTS REF_REGION;
CREATE TABLE REF_REGION
(
REG_ID INT NOT NULL AUTO_INCREMENT,
PREFIX VARCHAR(4),
COUNTRY VARCHAR (100),
STATE VARCHAR(100),
CITY VARCHAR(100),
ZIP INT,
PRIMARY KEY (REG_ID)
);

DROP TABLE IF EXISTS MEMBER;
CREATE TABLE MEMBER
(
MEMBER_ID INT NOT NULL AUTO_INCREMENT,
F_NAME Varchar(50),
L_NAME Varchar(50),
GENDER INT, FOREIGN KEY (GENDER) REFERENCES GENDER(GEN_ID),
M_PREFIX varchar(5),
MOBILE int CHECK (LEN(10)),
EMAILID varchar(20),
ADD_1 varchar(50),
ADD_2 Varchar(50),
CITY Varchar(10),
STATE Varchar (20),
ZIP varchar(6),
MEM_TYPE int,
PRIMARY KEY (MEMBER_ID),
FOREIGN KEY (MEM_TYPE) REFERENCES MEM_TYPE(TYPE_ID)
);

DROP TABLE IF EXISTS MEM_LOGIN;
Create Table MEM_LOGIN
(
MEMBER_ID int , FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER(MEMBER_ID),
EmailId varchar(50),
ENCR_PWD varchar(4000)
);

DROP TABLE IF EXISTS MEMBER_KYC;
CREATE TABLE MEMBER_KYC
(
MEMBER_ID int,
PANCARD VARCHAR(10) NOT NULL,
ADHARCARD VARCHAR(16) NOT NULL,
PASSPORT VARCHAR(20),
DL_NUM VARCHAR(20),
KYC_STATUS INT,
FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER(MEMBER_ID),
FOREIGN KEY (KYC_STATUS) REFERENCES REF_KYC_STATUS(KYC_STATUS)
);

DROP TABLE IF EXISTS MEMBER_ACCOUNTS;
CREATE TABLE MEMBER_ACCOUNTS
(
MEMBER_ID INT,
BANK_NAME VARCHAR(100) NOT NULL,
ACCOUNT_NUM VARCHAR(20) NOT NULL,
IFSC_CODE VARCHAR(50) NOT NULL,
ACCOUNT_DMAT VARCHAR(20),
FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER(MEMBER_ID)
);

DROP TABLE IF EXISTS REF_PRE_IPO_LIST;
CREATE TABLE REF_PRE_IPO_LIST
(
PRE_IPO_ID INT NOT NULL AUTO_INCREMENT,
PRE_IPO_NAME VARCHAR(100),
ISIN_NUM VARCHAR(50),
ACQ_PRICE DECIMAL(13, 4),
PRIMARY KEY (PRE_IPO_ID)
);

DROP TABLE IF EXISTS REF_LOAN_TYPE;
CREATE TABLE REF_LOAN_TYPE
(
LOAN_TYPE_ID INT NOT NULL AUTO_INCREMENT,
LOAN_TYPE VARCHAR(100),
PRIMARY KEY (LOAN_TYPE_ID)
);
INSERT INTO REF_LOAN_TYPE(LOAN_TYPE) VALUES ('PERSONAL LOAN');
INSERT INTO REF_LOAN_TYPE(LOAN_TYPE) VALUES ('HOME LOAN');
INSERT INTO REF_LOAN_TYPE(LOAN_TYPE) VALUES ('LOAN AGAINT PROPERTY');
INSERT INTO REF_LOAN_TYPE(LOAN_TYPE) VALUES ('BALANCE TRANSFER AND TOP UP');
INSERT INTO REF_LOAN_TYPE(LOAN_TYPE) VALUES ('OVER DRAFT LOAN');
INSERT INTO REF_LOAN_TYPE(LOAN_TYPE) VALUES ('EDUCATION LOAN');
INSERT INTO REF_LOAN_TYPE(LOAN_TYPE) VALUES ('MUDRA LOAN');

DROP TABLE IF EXISTS REF_MUT_FUND;
CREATE TABLE REF_MUT_FUND
(
MUT_FUND_ID INT NOT NULL AUTO_INCREMENT,
MUT_FUND_HOUSE VARCHAR(100),
MUT_FUND_NAME VARCHAR (10), -- GROWTH/DIVIDEND
PRIMARY KEY (MUT_FUND_ID)
);

DROP TABLE IF EXISTS REF_MUT_FUND_PLAN;
CREATE TABLE REF_MUT_FUND_PLAN
(
MUT_PLAN_ID INT NOT NULL AUTO_INCREMENT,
MUT_FUND_PLAN VARCHAR(10),
PRIMARY KEY (MUT_PLAN_ID)
);
INSERT INTO REF_MUT_FUND_PLAN (MUT_FUND_PLAN) VALUES ('GROWTH');
INSERT INTO REF_MUT_FUND_PLAN (MUT_FUND_PLAN) VALUES ('DIVIDEND');

DROP TABLE IF EXISTS REF_INVESTMENT_TYPE;
CREATE TABLE REF_INVESTMENT_TYPE
(
INV_TYPE_ID INT NOT NULL AUTO_INCREMENT,
INV_TYPE VARCHAR(100),
PRIMARY KEY (INV_TYPE_ID)
);
INSERT INTO REF_INVESTMENT_TYPE (INV_TYPE) VALUES ('SIP (SYSTEMATIC INVESTMENT PLAN)');
INSERT INTO REF_INVESTMENT_TYPE (INV_TYPE) VALUES ('SWP (SYSTEMATIC WITHDRAWAL PLAN)');
INSERT INTO REF_INVESTMENT_TYPE (INV_TYPE) VALUES ('ONE TIME INVESTMENT');



